#include <stdio.h>

void calculate_the_maximum(int n, int k) {
    int max_and = 0, max_or = 0, max_xor = 0;

   
    for (int a = 1; a <= n; a++) {
        for (int b = a + 1; b <= n; b++) {
           
            int and_result = a & b;
            int or_result = a | b;
            int xor_result = a ^ b;

            
            if (and_result < k && and_result > max_and) {
                max_and = and_result;
            }

          
            if (or_result < k && or_result > max_or) {
                max_or = or_result;
            }

           
            if (xor_result < k && xor_result > max_xor) {
                max_xor = xor_result;
            }
        }
    }

   
    printf("%d\n", max_and);
    printf("%d\n", max_or);
    printf("%d\n", max_xor);
}

int main() {
    int n, k;
    scanf("%d %d", &n, &k);
    calculate_the_maximum(n, k);
    return 0;
}





#include <stdio.h>

int main() 
{
    int n;
    scanf("%d", &n);

    int size = 2 * n - 1;  

    
    for (int i = 0; i < size; i++) {
        
        for (int j = 0; j < size; j++) {
           
            int top = i;
            int left = j;
            int bottom = size - 1 - i;
            int right = size - 1 - j;

            
            int min_distance = top;
            if (left < min_distance) {
                min_distance = left;
            }
            if (bottom < min_distance) {
                min_distance = bottom;
            }
            if (right < min_distance) {
                min_distance = right;
            }

           
            int value = n - min_distance;
            printf("%d ", value);
        }
        printf("\n");
    }

    return 0;
}











